import 'reflect-metadata';
import { AgentOptions, AnswerOptions, FieldOptions, ObserverOptions, QuestionOptions, SkillRequestOptions, SkillOptions } from './metadata';
export declare function InputType(): (cnstr: Function) => void;
export declare function OutputType(): (cnstr: Function) => void;
export declare function QuestionType(): (cnstr: Function) => void;
export declare function SkillType(): (cnstr: Function) => void;
export declare function StatusType(): (cnstr: Function) => void;
export declare function finalizeDecorations(): void;
export declare function Agent(options?: AgentOptions): (target: Function) => void;
export declare function Field(options?: FieldOptions): (target: any, propertyKey: any) => void;
export type ReturnTypeFunc = (returns?: void) => any;
export declare function Skill(options: SkillOptions): (target: any, propertyKey: any, descriptor: any) => void;
export declare function Loader(): (target: any, propertyKey: any, descriptor: any) => void;
export declare function Question(options: QuestionOptions): (target: any, propertyKey: any, descriptor: any) => void;
export declare function Answer(options: AnswerOptions): (target: any, propertyKey: any, descriptor: any) => void;
export declare function SkillRequest(options: SkillRequestOptions): (target: any, propertyKey: string, descriptor: PropertyDescriptor) => void;
export declare function Observer(options: ObserverOptions): (target: any, propertyKey: any, descriptor: any) => void;
