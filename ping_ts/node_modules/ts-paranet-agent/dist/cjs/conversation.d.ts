import { AgentDefinition, AnswerDefinition, SkillDefinition } from './metadata';
export declare function getOrCreateConversation(id: string, agent: AgentDefinition, skill: SkillDefinition, answers: AnswerDefinition[]): Conversation;
export declare function getConversation(cls: string, id: string): Conversation;
export declare class ConversationInstance<T> {
    subject: string;
    action: string;
    agent: T;
}
export declare class Conversation {
    id: string;
    recipientId: string;
    agent: AgentDefinition;
    skill: SkillDefinition;
    asks: Record<string, AnswerDefinition>;
    instance?: object;
    constructor(id: string);
    construct(agent: AgentDefinition, skill: SkillDefinition, answers: AnswerDefinition[]): void;
    ask(fun: Function, value: Record<string, any>): Promise<void>;
    status(type: Function, value: Record<string, any>): Promise<void>;
    response(value: any): Promise<void>;
}
